‚òê Complete class integration @started(02-07-20 23:07)
    07/07/2020 (Supplemental):
        Still working on complete class integration.
        The problem we are having is that grouping the enemies into a class seems harder than we thought.
        We are following the example of the Phaser Mini Degree that shows us that we can create an Enemy Group Class and then put all of the enemy classes into tha group.
        Then we can refer to the global and specific enemy class functions accordingly.
        However, we are working on setting up gameScene.js to recognise only the enemy group class and not have to instantiate the other classes into the scene since there can be a lot of enemies and we have all of them organised into the enemy group class, along with their respective class files.
        Currently, the enemyInterceptor is the one we need to work on in order to faciliate any functionality with the enemy, then we can work on the others.
        The current error we are receiving is that the EnemyInterceptor is not defined. From what we know of this already is that the enemyInterceptor.js class file has not been imported into game scene. This contradicts what we were supposed to be working on so we are going to clean up the gameScene.js for the intended methods we have just stated.
    06/07/2020 (Supplemental):
        We have just been optmising the project from the tutorial template.
        Up until the optimisation of the template for this project, I have mainly been doing this on my own.
        Mohammed Maqbol has joined me in the effort to organise classes accordingly since the tutorial provided a messy way of organising all code. Good for beginners but not for people who are planning to do a game with this template.
        It appears that during optimisation, we need to create a group class for the enemies.
        The enemies have different speeds and in the future will probably have different abilities as well, or perhaps different cannons or weapons.
        We need to be able to separate the classes between each type of enemy so that we can make these changes without interfering with other enemies.
        At least, that is the future of this game after class optimisation.
        After we finish with the classes, it will be pushed to our repository and made publically avialable for anyone that wants to use it.
        Additionally, I made some minor differences to the tutorial version, so the code may not be exactly the same despite the class implementations.
    02/07/2020:
        This project is new and followed the directions of Luis Zuno in his YouTube videos.
        The goal of this project will be to implement classes for making this type of game.
        Developers for this task will be completed by: Luke Wolf (LukeWolfGames) and Mohommad Maqbol (Enjoy2Live).